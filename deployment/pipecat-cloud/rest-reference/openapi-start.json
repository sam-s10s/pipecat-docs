{
  "openapi": "3.0.0",
  "info": {
    "title": "Pipecat Cloud",
    "version": "1.0.0",
    "description": "Public API for Pipecat Cloud services"
  },
  "servers": [
    {
      "url": "https://api.pipecat.daily.co/v1/public",
      "description": "Public API server"
    }
  ],
  "paths": {
    "/{agentName}/start": {
      "post": {
        "summary": "Start a service instance",
        "operationId": "startService",
        "security": [
          {
            "PublicKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "agentName",
            "in": "path",
            "required": true,
            "description": "Name of the agent to start",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "PublicKeyAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Authentication using a Pipecat Cloud API token."
      }
    },
    "schemas": {
      "StartRequest": {
        "type": "object",
        "properties": {
          "createDailyRoom": {
            "type": "boolean",
            "description": "Whether to create a Daily room for the service instance"
          },
          "dailyRoomProperties": {
            "type": "object",
            "description": "Optional configuration for the Daily room. Only used when createDailyRoom is true.\n\nSee [Daily API documentation](https://docs.daily.co/reference/rest-api/rooms/config) for supported properties.",
            "example": { "enable_recording": "cloud" }
          },
          "dailyMeetingTokenProperties": {
            "type": "object",
            "description": "Optional configuration for the Daily meeting token. Only used when createDailyRoom is true.\n\nSee [Daily API documentation](https://docs.daily.co/reference/rest-api/meeting-tokens/config) for supported properties.",
            "example": { "is_owner": true, "enable_auto_recording": true }
          },
          "body": {
            "type": "object",
            "description": "Arbitrary user data / configuration object to pass to the service instance. Accessible as the first parameter of the `bot` method or custom entry point.\n\nSee the [`Starting Sessions` docs](../../fundamentals/active-sessions#passing-data) for more information.",
            "example": { "foo": "bar" }
          }
        }
      },
      "StartResponse": {
        "type": "object",
        "properties": {
          "dailyRoom": {
            "type": "string",
            "description": "URL of the created Daily room (if createDailyRoom was set to true)",
            "example": "https://cloud-354b1860310a444ba0f528b6a2f467c4.daily.co/qZbK9nyXCDCmQ0zDDZta"
          },
          "dailyToken": {
            "type": "string",
            "description": "Token to access the Daily room (if createDailyRoom was set to true)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "sessionId": {
            "type": "string",
            "description": "Session ID for the created session",
            "example": "639f91d8-d511-4677-a83b-bd7564d5d92f"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      }
    }
  },
  "security": [
    {
      "PublicKeyAuth": []
    }
  ]
}
